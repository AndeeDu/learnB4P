{
  "hash": "a8d060b24605943d0238c55e7b36582e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"06 - Multilevel models\"\nauthor: \"Stefano Coretta\"\nformat:\n  mono-light-revealjs:\n    theme: [default, custom.scss]\n    history: false\nfilters:\n  - tachyonsextra\nexecute:\n  echo: true\nknitr:\n  opts_chunk: \n    fig-align: center\n---\n\n\n\n\n## Set order of levels\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntoken_measures <- token_measures |> \n  mutate(\n    c2_phonation = factor(c2_phonation, levels = c(\"voiceless\", \"voiced\"))\n  )\n```\n:::\n\n\n## Multilevel terms\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nget_prior(\n  v1_duration ~\n    0 + c2_phonation:language + s(speech_rate_c, k = 3) +\n    (0 + c2_phonation | speaker),\n  data = token_measures,\n  family = lognormal\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                prior class                                  coef   group resp\n               (flat)     b                                                   \n               (flat)     b    c2_phonationvoiced:languageItalian             \n               (flat)     b     c2_phonationvoiced:languagePolish             \n               (flat)     b c2_phonationvoiceless:languageItalian             \n               (flat)     b  c2_phonationvoiceless:languagePolish             \n               (flat)     b                      sspeech_rate_c_1             \n               lkj(1)   cor                                                   \n               lkj(1)   cor                                       speaker     \n student_t(3, 0, 2.5)    sd                                                   \n student_t(3, 0, 2.5)    sd                                       speaker     \n student_t(3, 0, 2.5)    sd                    c2_phonationvoiced speaker     \n student_t(3, 0, 2.5)    sd                 c2_phonationvoiceless speaker     \n student_t(3, 0, 2.5)   sds                                                   \n student_t(3, 0, 2.5)   sds               s(speech_rate_c, k = 3)             \n student_t(3, 0, 2.5) sigma                                                   \n dpar nlpar lb ub       source\n                       default\n                  (vectorized)\n                  (vectorized)\n                  (vectorized)\n                  (vectorized)\n                  (vectorized)\n                       default\n                  (vectorized)\n             0         default\n             0    (vectorized)\n             0    (vectorized)\n             0    (vectorized)\n             0         default\n             0    (vectorized)\n             0         default\n```\n\n\n:::\n:::\n\n## Model priors\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_7_priors <- c(\n  prior(normal(4.45, 0.275), class = b),\n  prior(normal(0, 0.5), class = b, coef = sspeech_rate_c_1),\n  prior(normal(0, 0.1), class = sigma),\n  prior(normal(0, 0.1), class = sd),\n  prior(normal(0, 0.1), class = sds),\n  prior(lkj(2), class = cor)\n)\n```\n:::\n\n\n## Fit model\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_7 <- brm(\n  v1_duration ~\n    0 + c2_phonation:language + s(speech_rate_c, k = 3) +\n    (0 + c2_phonation | speaker),\n  data = token_measures,\n  family = lognormal,\n  prior = m_7_priors,\n  seed = my_seed,\n  cores = 4,\n  file = \"data/cache/m_7\"\n)\n```\n:::\n\n\n## Model summary\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(m_7, prob = 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: lognormal \n  Links: mu = identity; sigma = identity \nFormula: v1_duration ~ 0 + c2_phonation:language + s(speech_rate_c, k = 3) + (0 + c2_phonation | speaker) \n   Data: token_measures (Number of observations: 1342) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nSmoothing Spline Hyperparameters:\n                      Estimate Est.Error l-80% CI u-80% CI Rhat Bulk_ESS\nsds(sspeech_rate_c_1)     0.19      0.07     0.10     0.27 1.00     2431\n                      Tail_ESS\nsds(sspeech_rate_c_1)      911\n\nMultilevel Hyperparameters:\n~speaker (Number of levels: 17) \n                                              Estimate Est.Error l-80% CI\nsd(c2_phonationvoiceless)                         0.13      0.02     0.10\nsd(c2_phonationvoiced)                            0.12      0.02     0.10\ncor(c2_phonationvoiceless,c2_phonationvoiced)     0.82      0.11     0.67\n                                              u-80% CI Rhat Bulk_ESS Tail_ESS\nsd(c2_phonationvoiceless)                         0.15 1.00     1811     2958\nsd(c2_phonationvoiced)                            0.15 1.00     1839     2604\ncor(c2_phonationvoiceless,c2_phonationvoiced)     0.93 1.00     1857     2872\n\nRegression Coefficients:\n                                      Estimate Est.Error l-80% CI u-80% CI Rhat\nc2_phonationvoiceless:languageItalian     4.62      0.04     4.56     4.67 1.01\nc2_phonationvoiced:languageItalian        4.73      0.04     4.68     4.78 1.00\nc2_phonationvoiceless:languagePolish      4.34      0.05     4.27     4.41 1.00\nc2_phonationvoiced:languagePolish         4.43      0.05     4.36     4.50 1.00\nsspeech_rate_c_1                         -0.09      0.01    -0.11    -0.08 1.00\n                                      Bulk_ESS Tail_ESS\nc2_phonationvoiceless:languageItalian     1001     1583\nc2_phonationvoiced:languageItalian        1264     2022\nc2_phonationvoiceless:languagePolish      1692     1995\nc2_phonationvoiced:languagePolish         1948     2173\nsspeech_rate_c_1                          5706     3063\n\nFurther Distributional Parameters:\n      Estimate Est.Error l-80% CI u-80% CI Rhat Bulk_ESS Tail_ESS\nsigma     0.19      0.00     0.19     0.20 1.00     8048     3024\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n\n\n:::\n:::\n\n\n## Posterior probability distribution: outcome\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nconditional_effects(m_7, effects = \"language:c2_phonation\")\n```\n\n::: {.cell-output-display}\n![](06_multilevel_files/figure-revealjs/m-7-cond-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Posterior probability distribution: difference of difference\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\navg_comparisons(m_7, variables = \"c2_phonation\", by = \"language\", conf_level = 0.8, comparison = \"ratio\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n         Term                       Contrast language Estimate 10.0 % 90.0 %\n c2_phonation mean(voiced) / mean(voiceless)  Italian     1.12   1.10   1.13\n c2_phonation mean(voiced) / mean(voiceless)  Polish      1.10   1.07   1.12\n\nColumns: term, contrast, language, estimate, conf.low, conf.high, predicted_lo, predicted_hi, predicted, tmp_idx \nType:  response \n```\n\n\n:::\n\n```{.r .cell-code}\navg_comparisons(m_7, variables = \"c2_phonation\", by = \"language\", conf_level = 0.8, comparison = \"ratio\", hypothesis = \"b2 = b1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Term Estimate  10.0 % 90.0 %\n b2=b1  -0.0185 -0.0495 0.0137\n\nColumns: term, estimate, conf.low, conf.high \nType:  response \n```\n\n\n:::\n:::\n\n\n## Spread draws\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngather_draws(m_7, r_speaker[speaker,term])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 136,000 × 7\n# Groups:   speaker, term, .variable [34]\n   speaker term               .chain .iteration .draw .variable .value\n   <chr>   <chr>               <int>      <int> <int> <chr>      <dbl>\n 1 it01    c2_phonationvoiced      1          1     1 r_speaker 0.0960\n 2 it01    c2_phonationvoiced      1          2     2 r_speaker 0.0764\n 3 it01    c2_phonationvoiced      1          3     3 r_speaker 0.0686\n 4 it01    c2_phonationvoiced      1          4     4 r_speaker 0.119 \n 5 it01    c2_phonationvoiced      1          5     5 r_speaker 0.132 \n 6 it01    c2_phonationvoiced      1          6     6 r_speaker 0.120 \n 7 it01    c2_phonationvoiced      1          7     7 r_speaker 0.102 \n 8 it01    c2_phonationvoiced      1          8     8 r_speaker 0.0592\n 9 it01    c2_phonationvoiced      1          9     9 r_speaker 0.0339\n10 it01    c2_phonationvoiced      1         10    10 r_speaker 0.118 \n# ℹ 135,990 more rows\n```\n\n\n:::\n:::\n\n\n\n## Forest plot\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngather_draws(m_7, r_speaker[speaker,term]) |> \n  ggplot(aes(.value, reorder(speaker, .value))) +\n  geom_vline(xintercept = 0) +\n  stat_halfeye() +\n  facet_grid(cols = vars(term))\n```\n\n::: {.cell-output-display}\n![](06_multilevel_files/figure-revealjs/forest-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Calculate posterior draws for each participant\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_7_grid <- token_measures |> \n  distinct(speaker, language, c2_phonation) |> \n  mutate(\n    speech_rate_c = 0\n  )\n\nm_7_epred <- epred_draws(m_7, m_7_grid)\nm_7_epred\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 136,000 × 9\n# Groups:   speaker, language, c2_phonation, speech_rate_c, .row [34]\n   speaker language c2_phonation speech_rate_c  .row .chain .iteration .draw\n   <chr>   <chr>    <fct>                <dbl> <int>  <int>      <int> <int>\n 1 it01    Italian  voiced                   0     1     NA         NA     1\n 2 it01    Italian  voiced                   0     1     NA         NA     2\n 3 it01    Italian  voiced                   0     1     NA         NA     3\n 4 it01    Italian  voiced                   0     1     NA         NA     4\n 5 it01    Italian  voiced                   0     1     NA         NA     5\n 6 it01    Italian  voiced                   0     1     NA         NA     6\n 7 it01    Italian  voiced                   0     1     NA         NA     7\n 8 it01    Italian  voiced                   0     1     NA         NA     8\n 9 it01    Italian  voiced                   0     1     NA         NA     9\n10 it01    Italian  voiced                   0     1     NA         NA    10\n# ℹ 135,990 more rows\n# ℹ 1 more variable: .epred <dbl>\n```\n\n\n:::\n:::\n\n\n## Calculate posterior difference\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_7_epred_diff <- m_7_epred |> \n  ungroup() |> \n  select(-.row) |> \n  pivot_wider(names_from = c2_phonation, values_from = .epred) |> \n  mutate(\n    diff = voiced - voiceless\n  )\n\nm_7_epred_diff\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,000 × 9\n   speaker language speech_rate_c .chain .iteration .draw voiced voiceless  diff\n   <chr>   <chr>            <dbl>  <int>      <int> <int>  <dbl>     <dbl> <dbl>\n 1 it01    Italian              0     NA         NA     1   127.      115. 11.9 \n 2 it01    Italian              0     NA         NA     2   125.      117.  8.17\n 3 it01    Italian              0     NA         NA     3   124.      118.  5.73\n 4 it01    Italian              0     NA         NA     4   122.      113.  9.02\n 5 it01    Italian              0     NA         NA     5   125.      117.  8.13\n 6 it01    Italian              0     NA         NA     6   124.      115.  9.15\n 7 it01    Italian              0     NA         NA     7   124.      112. 12.2 \n 8 it01    Italian              0     NA         NA     8   121.      110. 11.3 \n 9 it01    Italian              0     NA         NA     9   119.      112.  6.42\n10 it01    Italian              0     NA         NA    10   128.      117. 11.1 \n# ℹ 67,990 more rows\n```\n\n\n:::\n:::\n\n\n## Plot posterior difference by speaker\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06_multilevel_files/figure-revealjs/diff-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## What about different vowels?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntoken_measures |> \n  ggplot(aes(c2_phonation, v1_duration)) +\n  geom_jitter(width = 0.1, alpha = 0.2) +\n  facet_grid(rows = vars(vowel), cols = vars(language))\n```\n\n::: {.cell-output-display}\n![](06_multilevel_files/figure-revealjs/vdur-vow-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## You try it! {background-color=var(--inverse)}\n\nA hint\n\n```r\nv1_duration ~\n    0 + c2_phonation:vowel:language + s(speech_rate_c, k = 3) +\n    (0 + c2_phonation:vowel | speaker)\n```\n\n",
    "supporting": [
      "06_multilevel_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}